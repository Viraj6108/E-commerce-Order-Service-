spring.application.name=Order-Service
server.port=0


#Data base configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/e-commerce
spring.datasource.username=postgres
spring.datasource.password=root

#Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


#Apache kafka Producer configuration
spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9096
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.trusted-packages=com.webdev.ws.*
spring.kafka.producer.acks=all
#
##this will retry till given number of time 2 min
spring.kafka.producer.properties.delivery.timeout.ms = 120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
#When explicitly use idempotence acks should be set to all if not it will throw error
spring.kafka.producer.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

order.created.topic.name=order-event

spring.kafka.consumer.bootstrap-servers=localhost:9092,localhost:9096
spring.kafka.consumer.auto-offset-reset=earliest
consumer.group.id=orchestration-group
spring.kafka.consumer.properties.spring.json.trusted-packages=com.webdev.ws.*